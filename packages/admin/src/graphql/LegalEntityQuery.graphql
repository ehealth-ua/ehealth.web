query LegalEntityQuery(
  $id: ID!
  $mergeLegalEntityFilter: RelatedLegalEntityFilter
  $divisionFilter: DivisionFilter
  $orderByMergedFromLegalEntities: RelatedLegalEntityOrderBy
  $firstMergedFromLegalEntities: Int
  $lastMergedFromLegalEntities: Int
  $beforeMergedFromLegalEntities: String
  $afterMergedFromLegalEntities: String
  $firstDivisions: Int
  $lastDivisions: Int
  $beforeDivisions: String
  $afterDivisions: String
) {
  legalEntity(id: $id) {
    id
    databaseId
    status
    edrpou
    name
    addresses {
      type
      area
      region
      settlement
      settlementType
      settlementId
      streetType
      street
      building
      apartment
    }
    phones {
      type
      number
    }
    email
    type
    ownerPropertyType
    kveds
    misVerified
    nhsVerified
    nhsReviewed
    edrVerified
    nhsComment
    website
    receiverFundsCode
    legalForm
    beneficiary
    archive {
      date
      place
    }
    license {
      licenseNumber
      issuedBy
      issuedDate
      expiryDate
      activeFromDate
      whatLicensed
      orderNo
    }
    accreditation {
      category
      issuedDate
      expiryDate
      orderNo
      orderDate
    }
    owner {
      id
      databaseId
      position
      startDate
      endDate
      status
      employeeType
      party {
        id
        firstName
        lastName
        secondName
      }
      additionalInfo {
        specialities {
          speciality
        }
      }
    }
    mergedToLegalEntity {
      mergedToLegalEntity {
        id
      }
    }
    mergedFromLegalEntities(
      first: $firstMergedFromLegalEntities
      before: $beforeMergedFromLegalEntities
      after: $afterMergedFromLegalEntities
      last: $lastMergedFromLegalEntities
      filter: $mergeLegalEntityFilter
      orderBy: $orderByMergedFromLegalEntities
    ) {
      nodes {
        id
        isActive
        reason
        insertedAt
        mergedFromLegalEntity {
          id
          name
          edrpou
        }
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
    }
    divisions(
      first: $firstDivisions
      filter: $divisionFilter
      before: $beforeDivisions
      after: $afterDivisions
      last: $lastDivisions
    ) {
      nodes {
        id
        databaseId
        name
        addresses {
          type
          area
          region
          settlement
          settlementType
          settlementId
          streetType
          street
          building
          apartment
        }
        phones {
          type
          number
        }
        email
        status
        mountainGroup
        dlsVerified
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
    }
  }
}
